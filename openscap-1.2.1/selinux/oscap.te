policy_module(oscap, 1.1.0)

########################################
#
# Declarations
#

type oscap_t;
type oscap_exec_t;
application_domain(oscap_t, oscap_exec_t)
role system_r types oscap_t;

type oscap_tmp_t;
files_tmp_file(oscap_tmp_t)

oscap_probe_template(unconfined)

permissive oscap_t;

########################################
#
# oscap local policy
#

allow oscap_t self:process signal;

allow oscap_t unconfined_oscap_probe_t:process signal;

allow oscap_t self:fifo_file manage_fifo_file_perms;
allow oscap_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(oscap_t, oscap_tmp_t, oscap_tmp_t)
manage_files_pattern(oscap_t, oscap_tmp_t, oscap_tmp_t)
files_tmp_filetrans(oscap_t, oscap_tmp_t, { file dir })

files_read_etc_files(oscap_t)
files_read_usr_files(oscap_t)

userdom_use_inherited_user_ptys(oscap_t)

miscfiles_read_localization(oscap_t)

# Allow to send a message to syslog
require {
	type devlog_t;
	type kernel_t;
}
allow oscap_t devlog_t:sock_file write;
allow oscap_t kernel_t:unix_dgram_socket sendto;
allow oscap_t self:netlink_route_socket { bind create getattr nlmsg_read };

# Allow to fill sysinfo into XCCDF Result
allow oscap_t self:unix_dgram_socket create_socket_perms;

# Allow networking for --fetch-remote-resources option
allow oscap_t self:udp_socket create_socket_perms;
allow oscap_t self:tcp_socket create_stream_socket_perms;
sysnet_read_config(oscap_t)
corenet_tcp_connect_all_ports(oscap_t)

# run unconfined_oscap_probe_t process unconfined
optional_policy(`
	unconfined_domain(unconfined_oscap_probe_t)
')

require {
    type unconfined_t, sysadm_t;
    role unconfined_r, sysadm_r;
 };

oscap_run(unconfined_t, unconfined_r)
oscap_run(sysadm_t, sysadm_r)
