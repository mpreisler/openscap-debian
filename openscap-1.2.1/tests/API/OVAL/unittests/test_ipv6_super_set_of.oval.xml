<?xml version="1.0" encoding="UTF-8"?>
<oval_definitions xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:unix-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix" xmlns:ind-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:lin-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix unix-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5#linux linux-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-common-5 oval-common-schema.xsd">
    <generator>
      <oval:product_name>cpe:/a:open-scap:oscap</oval:product_name>
      <oval:schema_version>5.8</oval:schema_version>
      <oval:timestamp>2013-12-04T11:55:04</oval:timestamp>
    </generator>
    <definitions>
      <definition id="oval:x:def:1" version="1" class="compliance">
        <metadata>
          <title>Superset: State and system contains the same address. We expect 'true' result.</title>
          <description>.</description>
        </metadata>
        <criteria>
          <criterion test_ref="oval:x:tst:1" comment="."/>
        </criteria>
      </definition>
      <definition id="oval:x:def:2" version="1" class="compliance">
        <metadata>
          <title>Superset: Set of ipv6 addresses defined by state has greater cardinality. We expect 'false' result.</title>
          <description>.</description>
        </metadata>
        <criteria>
          <criterion test_ref="oval:x:tst:2" comment="."/>
        </criteria>
      </definition>
      <definition id="oval:x:def:3" version="1" class="compliance">
        <metadata>
          <title>Superset: Set of ipv6 addresses defined by system has greater cardinality. We expect 'true' result.</title>
          <description>.</description>
        </metadata>
        <criteria>
          <criterion test_ref="oval:x:tst:3" comment="."/>
        </criteria>
      </definition>
      <definition id="oval:x:def:4" version="1" class="compliance">
        <metadata>
          <title>Superset: Different addresses with different prefix length. We expect 'false' result.</title>
          <description>.</description>
        </metadata>
        <criteria>
          <criterion test_ref="oval:x:tst:4" comment="."/>
        </criteria>
      </definition>
      <definition id="oval:x:def:5" version="1" class="compliance">
        <metadata>
          <title>Superset: Compare different ipv6 addresses. The address on system has shorter prefix length (32);
                 both addresses match on first 32b. Thus state is 'subset of' syschar. We expect 'true' result.</title>
          <description>.</description>
        </metadata>
        <criteria>
          <criterion test_ref="oval:x:tst:5" comment="."/>
        </criteria>
      </definition>
      <definition id="oval:x:def:6" version="1" class="compliance">
        <metadata>
          <title>Superset: Compare different ipv6 addresses. The address in state has shorter prefix length (32);
                 both addresses match on first 32b, but differ beyond. We expect 'false' result.</title>
          <description>.</description>
        </metadata>
        <criteria>
          <criterion test_ref="oval:x:tst:6" comment="."/>
        </criteria>
      </definition>
    </definitions>
    <tests>
      <ind-def:variable_test id="oval:x:tst:1" version="1" check="all" comment=".">
        <ind-def:object object_ref="oval:x:obj:1"/>
        <ind-def:state state_ref="oval:x:ste:1"/>
      </ind-def:variable_test>
      <ind-def:variable_test id="oval:x:tst:2" version="1" check="all" comment=".">
        <ind-def:object object_ref="oval:x:obj:1"/>
        <ind-def:state state_ref="oval:x:ste:2"/>
      </ind-def:variable_test>
      <ind-def:variable_test id="oval:x:tst:3" version="1" check="all" comment=".">
        <ind-def:object object_ref="oval:x:obj:2"/>
        <ind-def:state state_ref="oval:x:ste:1"/>
      </ind-def:variable_test>
      <ind-def:variable_test id="oval:x:tst:4" version="1" check="all" comment=".">
        <ind-def:object object_ref="oval:x:obj:3"/>
        <ind-def:state state_ref="oval:x:ste:2"/>
      </ind-def:variable_test>
      <ind-def:variable_test id="oval:x:tst:5" version="1" check="all" comment=".">
        <ind-def:object object_ref="oval:x:obj:4"/>
        <ind-def:state state_ref="oval:x:ste:2"/>
      </ind-def:variable_test>
      <ind-def:variable_test id="oval:x:tst:6" version="1" check="all" comment=".">
        <ind-def:object object_ref="oval:x:obj:5"/>
        <ind-def:state state_ref="oval:x:ste:3"/>
      </ind-def:variable_test>
    </tests>
    <objects>
      <ind-def:variable_object id="oval:x:obj:1" version="1">
        <ind-def:var_ref>oval:x:var:1</ind-def:var_ref>
      </ind-def:variable_object>
      <ind-def:variable_object id="oval:x:obj:2" version="1">
        <ind-def:var_ref>oval:x:var:2</ind-def:var_ref>
      </ind-def:variable_object>
      <ind-def:variable_object id="oval:x:obj:3" version="1">
        <ind-def:var_ref>oval:x:var:3</ind-def:var_ref>
      </ind-def:variable_object>
      <ind-def:variable_object id="oval:x:obj:4" version="1">
        <ind-def:var_ref>oval:x:var:4</ind-def:var_ref>
      </ind-def:variable_object>
      <ind-def:variable_object id="oval:x:obj:5" version="1">
        <ind-def:var_ref>oval:x:var:5</ind-def:var_ref>
      </ind-def:variable_object>
    </objects>
    <states>
      <ind-def:variable_state id="oval:x:ste:1" version="1">
        <ind-def:value operation="superset of" datatype="ipv6_address">700:1a7e:70:face:b055::f1ee:f1ee</ind-def:value>
      </ind-def:variable_state>
      <ind-def:variable_state id="oval:x:ste:2" version="1">
        <ind-def:value operation="superset of" datatype="ipv6_address">700:1a7e:70:face:b055::f1ee:0000/120</ind-def:value>
      </ind-def:variable_state>
      <ind-def:variable_state id="oval:x:ste:3" version="1">
        <ind-def:value operation="superset of" datatype="ipv6_address">700:1a7e:70:face:b055::f1ee:0000/32</ind-def:value>
      </ind-def:variable_state>
    </states>
    <variables>
      <constant_variable id="oval:x:var:1" version="1" datatype="ipv6_address" comment=".">
        <value>700:1a7e:70:face:b055::f1ee:f1ee</value>
      </constant_variable>
      <constant_variable id="oval:x:var:2" version="1" datatype="ipv6_address" comment=".">
        <value>700:1a7e:70:face:b055::f1ee:f1ee/64</value>
      </constant_variable>
      <constant_variable id="oval:x:var:3" version="1" datatype="ipv6_address" comment=".">
        <value>700:1a7e::1a57:b007:1057:a11:da7a</value>
      </constant_variable>
      <constant_variable id="oval:x:var:4" version="1" datatype="ipv6_address" comment=".">
        <value>700:1a7e::1a57:b007:1057:a11:da7a/32</value>
      </constant_variable>
      <constant_variable id="oval:x:var:5" version="1" datatype="ipv6_address" comment=".">
        <value>700:1a7e::1a57:b007:1057:a11:da7a/120</value>
      </constant_variable>
    </variables>
</oval_definitions>
